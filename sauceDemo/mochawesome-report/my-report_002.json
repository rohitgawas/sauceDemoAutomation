{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-15T12:31:20.572Z",
    "end": "2024-08-15T12:31:24.662Z",
    "duration": 4090,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "907b2bc5-df20-4255-a5b0-c7c8c99a604e",
      "title": "",
      "fullFile": "cypress\\e2e\\tests\\verifyLoginPage.js",
      "file": "cypress\\e2e\\tests\\verifyLoginPage.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a119e279-580e-4ab5-b648-31e536645e5d",
          "title": "Test suite for checking scenarios of login page ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Vrify UI elements of login page are present in UI",
              "fullTitle": "Test suite for checking scenarios of login page  Vrify UI elements of login page are present in UI",
              "timedOut": null,
              "duration": 438,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//verify login page title is visible:\n(0, _loginPage.isLoginPageTitlePresent)(this.loginPageElements.pageHeader);\n//verify username field is visible:\n(0, _loginPage.isUserNameFeildPresent)(this.loginPageElements.userName);\n//verify password text field is visible:\n(0, _loginPage.isPassWordFeildPresent)(this.loginPageElements.passWord);\n//verify login button is visible:\n(0, _loginPage.isLoginButtonPresent)(this.loginPageElements.loginButton);",
              "err": {},
              "uuid": "4dfd4667-001e-420f-8361-0e723358fe76",
              "parentUUID": "a119e279-580e-4ab5-b648-31e536645e5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify login functionality with valid user",
              "fullTitle": "Test suite for checking scenarios of login page  Verify login functionality with valid user",
              "timedOut": null,
              "duration": 963,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//checks the login using valid user.\n//For this it uses login custom command defined in Support> commands.js file\ncy.login();",
              "err": {},
              "uuid": "5f0f0653-4555-44ef-b164-832813060d1f",
              "parentUUID": "a119e279-580e-4ab5-b648-31e536645e5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify login with invalid credentials",
              "fullTitle": "Test suite for checking scenarios of login page  Verify login with invalid credentials",
              "timedOut": null,
              "duration": 1232,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Enter invalid user name in username field :\n(0, _loginPage.enterInValidUserName)(this.loginPageElements.userName, this.loginPageElements.invalidUserName);\n//Get password text field and enter invalid password :\n(0, _loginPage.enterInvalidPassword)(this.loginPageElements.passWord, this.loginPageElements.invalidUserPassWord);\n//Get login button and click on it :\ncy.get(this.loginPageElements.loginButton).click();\n//Verify the error message :\n(0, _loginPage.verifyInvalidCredentialErrorCard)(this.loginPageElements.errorCard, this.loginPageElements.inValidUserError);",
              "err": {},
              "uuid": "41fda3a1-2f0d-4ab8-8433-84c5bf6bae16",
              "parentUUID": "a119e279-580e-4ab5-b648-31e536645e5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4dfd4667-001e-420f-8361-0e723358fe76",
            "5f0f0653-4555-44ef-b164-832813060d1f",
            "41fda3a1-2f0d-4ab8-8433-84c5bf6bae16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2633,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "my-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "json": true,
        "reportsDir": "reports/your-reports-folder",
        "reportFilename": "my-report",
        "overwrite": false
      },
      "version": "6.2.0"
    }
  }
}